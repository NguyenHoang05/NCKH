console.log("‚úÖ borrow.js loaded");

import { db, rtdb } from './firebase.js';
import { doc, setDoc, updateDoc } from "https://www.gstatic.com/firebasejs/11.10.0/firebase-firestore.js";
import { ref, set, update } from "https://www.gstatic.com/firebasejs/11.10.0/firebase-database.js";

// H√†m ƒë√≥ng modal
window.closeBorrowForm = function () {
  document.getElementById("borrowModal").style.display = "none";
}

// H√†m m·ªü modal
window.openBorrowForm = function () {
  document.getElementById("borrowModal").style.display = "flex";
}

// H√†m submit form m∆∞·ª£n s√°ch
window.submitBorrowForm = async function (event) {
  event.preventDefault();

  const studentName = document.getElementById("studentName").value.trim();
  const studentId = document.getElementById("studentId").value.trim();
  const bookId = document.getElementById("bookId").value.trim();
  const bookName = document.getElementById("bookNameBorrow").value.trim();
  const borrowDate = document.getElementById("borrowDate").value;
  const returnDate = document.getElementById("returnDate").value;

  if (!studentName || !studentId || !bookId || !bookName || !borrowDate || !returnDate) {
    alert("‚ö†Ô∏è Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin!");
    return;
  }

  try {
    const historyId = `${studentId}_${bookId}_${Date.now()}`;

    // 1Ô∏è‚É£ L∆∞u v√†o Firestore
    await setDoc(doc(db, "history", historyId), {
      studentName,
      studentId,
      bookId,
      bookName,
      borrowDate,
      returnDate,
      status: "ƒêang m∆∞·ª£n",
      createdAt: new Date().toISOString()
    });

    // 2Ô∏è‚É£ L∆∞u v√†o Realtime Database
    await set(ref(rtdb, "history/" + historyId), {
      studentName,
      studentId,
      bookId,
      bookName,
      borrowDate,
      returnDate,
      status: "ƒêang m∆∞·ª£n",
      createdAt: new Date().toISOString()
    });

    // 3Ô∏è‚É£ C·∫≠p nh·∫≠t tr·∫°ng th√°i s√°ch th√†nh "ƒê√£ m∆∞·ª£n"
    await updateDoc(doc(db, "books", bookId), { status: "ƒê√£ m∆∞·ª£n" });
    await update(ref(rtdb, "books/" + bookId), { status: "ƒê√£ m∆∞·ª£n" });

    // ‚úÖ Ch·ªâ hi·ªán th√¥ng b√°o ƒë∆°n gi·∫£n
    alert("üìö M∆∞·ª£n s√°ch th√†nh c√¥ng!");
    closeBorrowForm();

  } catch (error) {
    console.error("‚ùå L·ªói khi m∆∞·ª£n s√°ch:", error);
    alert("Kh√¥ng th·ªÉ m∆∞·ª£n s√°ch: " + error.message);
  }
};
